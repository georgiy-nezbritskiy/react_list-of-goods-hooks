{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NON","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","query","preparedGoods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","sortGoods","reverse","resetButton","className","type","cn","onClick","map","f","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,cAAAA,M,KA0BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAmBH,EAASI,KAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAxBR,SAAmBC,EAAiBC,GAClC,IAAMC,EAAa,YAAOF,GAgB1B,OAdAE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKX,EAASgB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKjB,EAASkB,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,KAAKf,EAASI,IACd,QACE,OAAO,MAINQ,EAOcQ,CAAUnB,EAAiBI,GAE5CE,GACFE,EAAaY,UAGf,IAAMC,EAAcjB,IAAcL,EAASI,KAAOG,EAOlD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYpB,IAAcL,EAASkB,WACvCQ,QAAS,kBAAMpB,EAAaN,EAASkB,WAJvC,iCASA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYpB,IAAcL,EAASgB,SACvCU,QAAS,kBAAMpB,EAAaN,EAASgB,SAJvC,4BASA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAalB,IACjBmB,QAAS,kBAAMlB,GAAeD,IAJhC,qBASCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAtCjBpB,EAAaN,EAASI,UACtBI,GAAc,IAkCR,sBAUJ,6BACE,6BACGC,EAAakB,KAAI,SAAAC,GAAC,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,eCrGrDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.00b33d35.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NON,\n}\n\nfunction sortGoods(goods: string[], query: SortType) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (query) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.NON:\n      default:\n        return 0;\n    }\n  });\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.NON);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = sortGoods(goodsFromServer, sortField);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  const resetButton = sortField !== SortType.NON || isReversed;\n\n  function handleResetClick() {\n    setSortField(SortType.NON);\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SortType.ALPHABET })}\n          onClick={() => setSortField(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SortType.LENGTH })}\n          onClick={() => setSortField(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {resetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleResetClick()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(f => <li data-cy=\"Good\">{f}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}