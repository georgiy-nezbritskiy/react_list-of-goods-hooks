{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","NON","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","query","preparedGoods","sort","good1","good2","LENGTH","length","NAME","localeCompare","sortGoods","reverse","resetButton","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,mBAAAA,I,eAAAA,I,cAAAA,M,KAyBE,IAAME,EAAM,WACjB,MAAkCC,mBAAoBH,EAAUI,KAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAtBR,SAAmBC,EAAiBC,GAClC,IAAMC,EAAa,YAAOF,GAe1B,OAbAE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKX,EAAUgB,OACb,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKjB,EAAUkB,KACb,OAAOJ,EAAMK,cAAcJ,GAC7B,KAAKf,EAAUI,IACf,QACE,OAAO,MAINQ,EAMcQ,CAAUnB,EAAiBI,GAE5CE,GACFE,EAAaY,UAGf,IAAMC,EAAcjB,IAAcL,EAAUI,KAAOG,EAOnD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYpB,IAAcL,EAAUkB,OACxCQ,QAAS,kBAAMpB,EAAaN,EAAUkB,OAJxC,iCASA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYpB,IAAcL,EAAUgB,SACxCU,QAAS,kBAAMpB,EAAaN,EAAUgB,SAJxC,4BASA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAalB,IACjBmB,QAAS,kBAAMlB,GAAeD,IAJhC,qBASCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAtCjBpB,EAAaN,EAAUI,UACvBI,GAAc,IAkCR,sBAUJ,6BACGC,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCnGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e8e2212e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  LENGTH,\n  NAME,\n  NON,\n}\n\nfunction sortGoods(goods: string[], query: SortField) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (query) {\n      case SortField.LENGTH:\n        return good1.length - good2.length;\n\n      case SortField.NAME:\n        return good1.localeCompare(good2);\n      case SortField.NON:\n      default:\n        return 0;\n    }\n  });\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState<SortField>(SortField.NON);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = sortGoods(goodsFromServer, sortField);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  const resetButton = sortField !== SortField.NON || isReversed;\n\n  function handleResetClick() {\n    setSortField(SortField.NON);\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SortField.NAME })}\n          onClick={() => setSortField(SortField.NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SortField.LENGTH })}\n          onClick={() => setSortField(SortField.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {resetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleResetClick()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}